import { useState, useEffect, useRef } from "react";
import { useUserTheme, getBackgroundStyle } from "@/lib/useTheme";

export default function ChatBot({
  show,
  onClose,
  question,
  choices,
}: {
  show: boolean;
  onClose: () => void;
  question: string;
  choices: string[];
}) {
  const [chatInput, setChatInput] = useState("");
  const [chatLog, setChatLog] = useState<string[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const { theme } = useUserTheme();
  const [isExpanded, setIsExpanded] = useState(false);
  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
  const [width, setWidth] = useState<number | null>(null); // null = auto
  const [isResizing, setIsResizing] = useState(false);
  const chatRef = useRef<HTMLDivElement>(null);

  // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå chat log ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏à‡∏ó‡∏¢‡πå‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
  useEffect(() => {
    setChatLog([]);
  }, [question]);

  if (!show) return null;

  // Mouse event handlers ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö resize
  useEffect(() => {
    if (!isResizing) return;
    const handleMouseMove = (e: MouseEvent) => {
      if (chatRef.current) {
        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà (‡∏•‡∏≤‡∏Å‡∏à‡∏≤‡∏Å‡∏ã‡πâ‡∏≤‡∏¢)
        const rect = chatRef.current.getBoundingClientRect();
        let newWidth = rect.right - e.clientX;
        // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥/‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
        if (newWidth < 320) newWidth = 320;
        if (newWidth > window.innerWidth - 64) newWidth = window.innerWidth - 64;
        setWidth(newWidth);
      }
    };
    const handleMouseUp = () => setIsResizing(false);
    window.addEventListener('mousemove', handleMouseMove);
    window.addEventListener('mouseup', handleMouseUp);
    return () => {
      window.removeEventListener('mousemove', handleMouseMove);
      window.removeEventListener('mouseup', handleMouseUp);
    };
  }, [isResizing]);

  return (
    <div
      ref={chatRef}
      className={`flex flex-col h-full rounded-xl shadow-lg border p-6 mt-5 text-left text-base backdrop-blur-sm transition-all duration-300 ${isExpanded ? 'fixed z-50 max-w-none' : 'relative max-w-5xl w-full mx-auto'}`}
      style={{
        ...getBackgroundStyle(theme.bgColor),
        borderColor: theme.textColor + '20',
        boxShadow: `0 10px 40px ${theme.textColor}15`,
        ...(isExpanded && width
          ? { width: width, maxWidth: '98vw', right: 16, left: 'auto', top: 16, bottom: 16, position: 'fixed', height: 'calc(100vh - 32px)' }
          : isExpanded
            ? { width: '80vw', maxWidth: '98vw', right: 16, left: 'auto', top: 16, bottom: 16, position: 'fixed', height: 'calc(100vh - 32px)' }
            : { minHeight: 500, maxHeight: '80vh', height: 'auto' }),
        cursor: isResizing ? 'ew-resize' : undefined
      }}
    >
      {/* Header + ‡∏õ‡∏∏‡πà‡∏°‡∏Ç‡∏¢‡∏≤‡∏¢/‡∏¢‡πà‡∏≠ */}
      <div className="flex justify-between items-center mb-5">
        <div className="flex items-center gap-3">
          <div className="w-10 h-10 rounded-full bg-gradient-to-r from-blue-500 to-purple-500 flex items-center justify-center shadow-md">
            <span className="text-white text-lg">ü§ñ</span>
          </div>
          <div>
            <p className="font-bold text-lg" style={{ color: theme.textColor }}>
              ‡∏ö‡∏±‡∏á‡∏ü‡∏±‡∏ô‡∏î‡∏µ‡πâ
            </p>
            <p className="text-sm" style={{ color: theme.textColor + '70' }}>
              ‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ó‡∏≥‡∏Ç‡πâ‡∏≠‡∏™‡∏≠‡∏ö
            </p>
          </div>
        </div>
        <div className="flex gap-2">
          <button
            onClick={() => setIsExpanded((v) => !v)}
            className="w-9 h-9 rounded-full flex items-center justify-center transition-all duration-200 hover:scale-110 hover:bg-blue-100 mr-1"
            style={{
              backgroundColor: theme.textColor + '10',
              color: theme.textColor + '80',
            }}
            title={isExpanded ? '‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á' : '‡∏Ç‡∏¢‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á'}
          >
            {isExpanded ? <span>üóï</span> : <span>üóñ</span>}
          </button>
          <button
            onClick={onClose}
            className="w-9 h-9 rounded-full flex items-center justify-center transition-all duration-200 hover:scale-110 hover:bg-red-100"
            style={{
              backgroundColor: theme.textColor + '10',
              color: theme.textColor + '80',
            }}
          >
            ‚úï
          </button>
        </div>
      {/* Drag handle ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ expanded) */}
      {isExpanded && (
        <div
          onMouseDown={() => setIsResizing(true)}
          style={{
            position: 'absolute',
            top: 0,
            left: 0,
            width: 12,
            height: '100%',
            cursor: 'ew-resize',
            zIndex: 100,
            background: isResizing ? theme.textColor + '10' : 'transparent',
            transition: 'background 0.2s',
            borderTopLeftRadius: 12,
            borderBottomLeftRadius: 12,
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            userSelect: 'none',
          }}
          title="‡∏•‡∏≤‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á"
        >
          <div style={{ width: 4, height: 40, background: theme.textColor + '30', borderRadius: 2, margin: 'auto' }} />
        </div>
      )}
      </div>

      {/* Quick Help Buttons */}
      <div className="grid grid-cols-2 gap-3 mb-5">
        <button
          onClick={() => setChatInput("‡∏Ç‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡∏ñ‡∏≤‡∏°‡∏≠‡∏∞‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö?")}
          className="p-3 rounded-lg transition-all duration-200 hover:scale-105 flex items-center gap-2"
          style={{ 
            backgroundColor: '#3b82f6' + '15',
            border: '1px solid ' + '#3b82f6' + '30',
            color: '#3b82f6'
          }}
        >
          <span className="text-lg">üí≠</span>
          <span className="text-sm font-medium">‡∏ñ‡∏≤‡∏°‡∏≠‡∏∞‡πÑ‡∏£?</span>
        </button>
        <button
          onClick={() => setChatInput("‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏´‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á?")}
          className="p-3 rounded-lg transition-all duration-200 hover:scale-105 flex items-center gap-2"
          style={{ 
            backgroundColor: '#10b981' + '15',
            border: '1px solid ' + '#10b981' + '30',
            color: '#10b981'
          }}
        >
          <span className="text-lg">üîç</span>
          <span className="text-sm font-medium">‡∏î‡∏π‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</span>
        </button>
        <button
          onClick={() => setChatInput("‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?")}
          className="p-3 rounded-lg transition-all duration-200 hover:scale-105 flex items-center gap-2"
          style={{ 
            backgroundColor: '#8b5cf6' + '15',
            border: '1px solid ' + '#8b5cf6' + '30',
            color: '#8b5cf6'
          }}
        >
          <span className="text-lg">üîë</span>
          <span className="text-sm font-medium">‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î</span>
        </button>
        <button
          onClick={() => setChatInput("‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ñ‡∏¥‡∏î‡∏¢‡∏±‡∏á‡πÑ‡∏á‡∏î‡∏µ?")}
          className="p-3 rounded-lg transition-all duration-200 hover:scale-105 flex items-center gap-2"
          style={{ 
            backgroundColor: '#f59e0b' + '15',
            border: '1px solid ' + '#f59e0b' + '30',
            color: '#f59e0b'
          }}
        >
          <span className="text-lg">üöÄ</span>
          <span className="text-sm font-medium">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡∏±‡∏á‡πÑ‡∏á?</span>
        </button>
      </div>

      {/* Chat Log */}
      <div
        className="flex-1 overflow-y-auto rounded-lg border p-4 space-y-4 scroll-smooth chat-scroll-container"
        style={{
          backgroundColor: theme.textColor + '05',
          borderColor: theme.textColor + '15',
          boxShadow: `inset 0 0 10px ${theme.textColor}05`,
          minHeight: 180
        }}
      >
        {chatLog.length === 0 ? (
          <div className="text-center py-10">
            <div className="w-20 h-20 mx-auto mb-4 rounded-full bg-gradient-to-r from-blue-400 to-purple-400 flex items-center justify-center shadow-lg">
              <span className="text-3xl">üëã</span>
            </div>
            <p className="text-base font-medium mb-2" style={{ color: theme.textColor }}>
              ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ! ‡∏ö‡∏±‡∏á‡∏ü‡∏±‡∏ô‡∏î‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
            </p>
            <p className="text-sm" style={{ color: theme.textColor + '70' }}>
              ‡∏•‡∏≠‡∏á‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
            </p>
          </div>
        ) : (
          chatLog.map((msg, i) => (
            <div
              key={i}
              className={`flex ${
                msg.startsWith("‡πÄ‡∏£‡∏≤:")
                  ? "justify-end"
                  : "justify-start"
              } mb-2`}
            >
              {!msg.startsWith("‡πÄ‡∏£‡∏≤:") && (
                <div className="w-7 h-7 rounded-full bg-gradient-to-r from-blue-400 to-purple-500 flex items-center justify-center mr-2 mt-1 flex-shrink-0 shadow-sm">
                  <span className="text-white text-xs">ü§ñ</span>
                </div>
              )}
              <div
                className={`max-w-[80%] px-5 py-3 rounded-2xl text-[15px] shadow-md ${
                  msg.startsWith("‡πÄ‡∏£‡∏≤:")
                    ? "rounded-br-md"
                    : "rounded-bl-md"
                }`}
                style={{
                  backgroundColor: msg.startsWith("‡πÄ‡∏£‡∏≤:")
                    ? 'rgba(59, 130, 246, 0.9)'
                    : theme.textColor + '08',
                  color: msg.startsWith("‡πÄ‡∏£‡∏≤:")
                    ? '#ffffff'
                    : theme.textColor,
                  border: msg.startsWith("‡πÄ‡∏£‡∏≤:")
                    ? 'none'
                    : `1px solid ${theme.textColor}15`,
                  lineHeight: '1.5',
                  boxShadow: msg.startsWith("‡πÄ‡∏£‡∏≤:")
                    ? `0 2px 5px rgba(59, 130, 246, 0.2)`
                    : `0 2px 5px ${theme.textColor}10`
                }}
              >
                <div className="font-medium mb-0.5" style={{ opacity: msg.startsWith("‡πÄ‡∏£‡∏≤:") ? 0.95 : 0.85 }}>
                  {msg.startsWith("‡πÄ‡∏£‡∏≤:") ? "‡πÄ‡∏£‡∏≤" : "‡∏ö‡∏±‡∏á‡∏ü‡∏±‡∏ô‡∏î‡∏µ‡πâ"}
                </div>
                <div style={{ whiteSpace: 'pre-line' }}>
                  {msg.replace(/^(‡πÄ‡∏£‡∏≤:|‡∏ö‡∏±‡∏á‡∏ü‡∏±‡∏ô‡∏î‡∏µ‡πâ:)\s*/, "")}
                </div>
              </div>
              {msg.startsWith("‡πÄ‡∏£‡∏≤:") && (
                <div className="w-7 h-7 rounded-full bg-blue-500 flex items-center justify-center ml-2 mt-1 flex-shrink-0 shadow-sm">
                  <span className="text-white text-xs">üë§</span>
                </div>
              )}
            </div>
          ))
        )}
        {isLoading && (
          <div className="flex justify-start mb-2">
            <div className="w-7 h-7 rounded-full bg-gradient-to-r from-blue-400 to-purple-500 flex items-center justify-center mr-2 mt-1 flex-shrink-0 shadow-sm">
              <span className="text-white text-xs">ü§ñ</span>
            </div>
            <div
              className="px-5 py-3 rounded-2xl rounded-bl-md text-[15px] shadow-md flex items-center gap-3"
              style={{
                backgroundColor: theme.textColor + '08',
                color: theme.textColor + '90',
                border: `1px solid ${theme.textColor}15`,
                boxShadow: `0 2px 5px ${theme.textColor}10`
              }}
            >
              <div className="flex space-x-2">
                <div className="w-2.5 h-2.5 rounded-full bg-current animate-bounce" style={{ animationDelay: '0ms' }}></div>
                <div className="w-2.5 h-2.5 rounded-full bg-current animate-bounce" style={{ animationDelay: '150ms' }}></div>
                <div className="w-2.5 h-2.5 rounded-full bg-current animate-bounce" style={{ animationDelay: '300ms' }}></div>
              </div>
              <span className="font-medium">‡∏ö‡∏±‡∏á‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏¥‡∏î...</span>
            </div>
          </div>
        )}
      </div>

      {/* Input Form */}
      <form
        onSubmit={async (e) => {
          e.preventDefault();
          if (!chatInput.trim() || isLoading) return;

          // Scroll to bottom
          setTimeout(() => {
            const chatContainer = document.querySelector(".chat-scroll-container");
            if (chatContainer) {
              chatContainer.scrollTop = chatContainer.scrollHeight;
            }
          }, 100);

          const currentInput = chatInput;
          setChatInput("");
          setIsLoading(true);

          // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤
          setChatLog((prev) => [...prev, `‡πÄ‡∏£‡∏≤: ${currentInput}`]);

          try {
            const res = await fetch("/api/chat", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                systemPrompt: `‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ö‡∏±‡∏á‡∏ü‡∏±‡∏ô‡∏î‡∏µ‡πâ ‡∏û‡∏µ‡πà‡∏ï‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏î‡πá‡∏Å‡∏ó‡∏≥‡∏Ç‡πâ‡∏≠‡∏™‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à ‡πÑ‡∏°‡πà‡πÄ‡∏â‡∏•‡∏¢‡∏ï‡∏£‡∏á‡πÜ ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡∏û‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏¥‡∏î‡πÄ‡∏≠‡∏á ‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ:\n\n1. **‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÇ‡∏à‡∏ó‡∏¢‡πå**: ‡πÅ‡∏ï‡∏Å‡πÇ‡∏à‡∏ó‡∏¢‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à ‡∏´‡∏≤‡∏Ñ‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç\n2. **‡∏î‡∏π‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å**: ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö ‡∏ï‡∏±‡∏î‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß\n3. **‡πÇ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Å‡∏•‡∏±‡∏ö**: ‡πÄ‡∏ä‡πà‡∏ô \"‡∏ô‡∏∂‡∏Å‡∏≠‡∏∞‡πÑ‡∏£‡∏≠‡∏≠‡∏Å‡∏ö‡πâ‡∏≤‡∏á?\" \"‡∏Ç‡πâ‡∏≠‡πÑ‡∏´‡∏ô‡∏ï‡∏±‡∏î‡∏ó‡∏¥‡πâ‡∏á‡πÑ‡∏î‡πâ?\"\n4. **‡πÉ‡∏´‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏™‡∏±‡πâ‡∏ô‡πÜ**: ‡πÄ‡∏ä‡πà‡∏ô \"‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å!\" \"‡∏Ñ‡∏¥‡∏î‡∏î‡∏µ‡πÅ‡∏•‡πâ‡∏ß!\" \"‡πÉ‡∏Å‡∏•‡πâ‡πÅ‡∏•‡πâ‡∏ß!\"\n\n‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡∏û‡∏µ‡πà‡πÜ ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ \"‡πÄ‡∏£‡∏≤\" ‡πÅ‡∏ó‡∏ô \"‡∏Ñ‡∏∏‡∏ì\" ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏∏‡∏†‡∏≤‡∏û‡πÄ‡∏Å‡∏¥‡∏ô  \n‡πÑ‡∏°‡πà‡∏û‡∏π‡∏î‡πÅ‡∏ö‡∏ö‡πÇ‡∏•‡∏Å‡∏™‡∏ß‡∏¢ ‡πÑ‡∏°‡πà‡∏¢‡∏±‡∏î‡πÄ‡∏¢‡∏µ‡∏¢‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏±‡∏á‡∏î‡∏µ  \n‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏±‡πâ‡∏ô ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö ‡∏°‡∏µ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏∞‡πÉ‡∏´‡πâ‡πÄ‡∏î‡πá‡∏Å‡∏Ñ‡∏¥‡∏î‡πÄ‡∏≠‡∏á`,
                question,
                choices,
                userMessage: currentInput,
              }),
            });

            if (!res.ok) {
              throw new Error(`HTTP ${res.status}`);
            }

            const data = await res.json();
            setChatLog((prev) => [
              ...prev,
              `‡∏ö‡∏±‡∏á‡∏ü‡∏±‡∏ô‡∏î‡∏µ‡πâ: ${data.reply || "‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏ô‡∏∞ ‡πÑ‡∏î‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö"}`,
            ]);
          } catch (error) {
            console.error('Chat error:', error);
            setChatLog((prev) => [
              ...prev,
              `‡∏ö‡∏±‡∏á‡∏ü‡∏±‡∏ô‡∏î‡∏µ‡πâ: ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡∏ö‡∏≠‡∏ó‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ‡∏ô‡∏∞ üôè`,
            ]);
          } finally {
            setIsLoading(false);
          }
        }}
        className={`flex gap-3 w-full pt-4`}
        style={{ marginTop: 'auto' }}
      >
        <input
          className={`flex-1 rounded-xl px-5 py-4 transition-all duration-200 focus:scale-[1.01] focus:outline-none focus:ring-2 focus:ring-blue-500 ${isExpanded ? 'text-lg' : 'text-base'} w-full`}
          placeholder="‡πÄ‡∏ä‡πà‡∏ô: ‡∏Ç‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡∏ñ‡∏≤‡∏°‡∏≠‡∏∞‡πÑ‡∏£? ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà..."
          value={chatInput}
          onChange={(e) => setChatInput(e.target.value)}
          style={{
            backgroundColor: theme.textColor + '08',
            borderColor: theme.textColor + '20',
            color: theme.textColor,
            border: `1px solid ${theme.textColor}20`,
            boxShadow: `0 2px 6px ${theme.textColor}08`
          }}
        />
        <button
          type="submit"
          disabled={!chatInput.trim() || isLoading}
          className={`px-6 py-4 rounded-xl font-medium transition-all duration-200 hover:scale-105 disabled:opacity-50 disabled:scale-100 shadow-lg flex items-center justify-center ${isExpanded ? 'text-lg' : 'text-base'} w-20`}
          style={{
            background: 'linear-gradient(135deg, #3b82f6, #4f46e5)',
            color: '#ffffff',
            minWidth: 48
          }}
          aria-label="‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"
        >
          {isLoading ? (
            <div className="flex items-center gap-2">
              <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
              <span>‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà</span>
            </div>
          ) : (
            <span className="text-xl">‚û°Ô∏è</span>
          )}
        </button>
      </form>
    </div>
  );
}
