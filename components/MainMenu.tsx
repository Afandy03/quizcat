// components/MainMenu.tsx
'use client'

import Link from "next/link"
import { usePathname } from "next/navigation"
import { useEffect, useState } from "react"
import { auth } from "@/lib/firebase"
import { useUserTheme, getBackgroundStyle } from "@/lib/useTheme"
import { isCurrentUserTest } from "@/lib/testUser"

const menuItems = [
  // üîπ ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
  { label: "‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î", path: "/dashboard", icon: "üè†", guestAllowed: true },
  { label: "‡∏ó‡∏≥‡∏Ç‡πâ‡∏≠‡∏™‡∏≠‡∏ö V2", path: "/quiz/v2/select", icon: "üöÄ", guestAllowed: true },

  // üîπ ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
  { label: "‡πÅ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•", path: "/rewards", icon: "üéÅ", guestAllowed: false },
  { label: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•", path: "/rewards/add", icon: "‚ûï", guestAllowed: false },

  // üîπ ‡∏Ç‡πâ‡∏≠‡∏™‡∏≠‡∏ö
  { label: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏™‡∏≠‡∏ö", path: "/add-question", icon: "‚ûï", guestAllowed: false },
  { label: "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏™‡∏≠‡∏ö", path: "/quiz/manage", icon: "üóÇÔ∏è", guestAllowed: false },

  // üîπ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  { label: "‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå", path: "/profile", icon: "üôã", guestAllowed: false },
  { label: "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤", path: "/settings", icon: "‚öôÔ∏è", guestAllowed: true }, // Guest ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ò‡∏µ‡∏°‡πÑ‡∏î‡πâ

  // üîπ ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
  { label: "‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô", path: "/admin/users", icon: "üõ†Ô∏è", guestAllowed: false }, // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏î‡∏π‡πÅ‡∏¢‡∏Å‡∏≠‡∏≠‡∏Å
  { label: "‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Ç‡πâ‡∏≠‡∏™‡∏≠‡∏ö V2", path: "/quiz/v2/analysis", icon: "üìà", guestAllowed: true },
  
  // üîπ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
  { label: "‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö", path: "/login", icon: "üö™", guestAllowed: true },
]

export default function MainMenu() {
  const currentPath = usePathname()
  const [isGuest, setIsGuest] = useState(false)
  const [isTestUser, setIsTestUser] = useState(false)
  const theme = useUserTheme()

  useEffect(() => {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö guest mode ‡πÅ‡∏•‡∏∞ authentication status
    const checkGuestStatus = () => {
      // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ authenticated user ‡∏•‡∏ö guest session
      if (auth.currentUser) {
        localStorage.removeItem('quizcat-guest-id')
        localStorage.removeItem('quizcat-guest-mode')
        setIsGuest(false)
        setIsTestUser(isCurrentUserTest())
      } else {
        const isGuestMode = localStorage.getItem('quizcat-guest-mode') === 'true'
        setIsGuest(isGuestMode)
        setIsTestUser(false)
      }
    }

    checkGuestStatus()
    
    // ‡∏ü‡∏±‡∏á auth state changes
    const unsubscribe = auth.onAuthStateChanged(() => {
      checkGuestStatus()
    })

    return () => unsubscribe()
  }, [])

  const visibleMenuItems = menuItems.filter(item => 
    isGuest ? item.guestAllowed : true
  )

  // ‡πÉ‡∏ä‡πâ theme ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏µ - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Ñ‡∏≠‡∏ô‡∏ó‡∏£‡∏≤‡∏™‡∏ï‡πå‡∏î‡∏µ
  const getContrastColor = (hexColor: string) => {
    // ‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏µ hex ‡πÄ‡∏õ‡πá‡∏ô RGB
    const r = parseInt(hexColor.slice(1, 3), 16)
    const g = parseInt(hexColor.slice(3, 5), 16)
    const b = parseInt(hexColor.slice(5, 7), 16)
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á
    const brightness = (r * 299 + g * 587 + b * 114) / 1000
    
    // ‡∏ñ‡πâ‡∏≤‡∏™‡∏µ‡πÄ‡∏Ç‡πâ‡∏° ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß ‡∏ñ‡πâ‡∏≤‡∏™‡∏µ‡∏™‡∏ß‡πà‡∏≤‡∏á ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏µ‡∏î‡∏≥
    return brightness < 128 ? '#ffffff' : '#000000'
  }

  const menuBgColor = theme.bgColor
  const menuTextColor = theme.textColor
  const borderColor = theme.textColor + "30"
  const hoverBgColor = theme.textColor + "15" // 15% opacity
  const activeBgColor = theme.textColor
  const activeTextColor = theme.bgColor

  return (
    <nav 
      className="fixed top-4 left-4 rounded-xl shadow-lg border p-4 space-y-1 w-52 z-50"
      style={{ 
        ...getBackgroundStyle(menuBgColor),
        borderColor: borderColor,
        color: menuTextColor 
      }}
    >
      {isGuest && (
        <div 
          className="border px-3 py-2 rounded-lg text-xs text-center mb-3"
          style={{
            backgroundColor: theme.textColor + '10',
            borderColor: theme.textColor + '40',
            color: theme.textColor
          }}
        >
          üé≠ ‡πÇ‡∏´‡∏°‡∏î‡∏ú‡∏π‡πâ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ä‡∏°
        </div>
      )}
      {isTestUser && (
        <div 
          className="border px-3 py-2 rounded-lg text-xs text-center mb-3"
          style={{
            backgroundColor: '#8b5cf6' + '20',
            borderColor: '#8b5cf6',
            color: '#6d28d9'
          }}
        >
          ü§ñ Test User Mode
        </div>
      )}
      {visibleMenuItems.map((item) => (
        <Link
          key={item.path}
          href={item.path}
          className={`
            block px-4 py-2.5 rounded-lg transition-all duration-200 
            ${currentPath === item.path 
              ? "shadow-md transform scale-105" 
              : "hover:transform hover:scale-102"
            }
          `}
          style={{
            backgroundColor: currentPath === item.path 
              ? activeBgColor 
              : 'transparent',
            color: currentPath === item.path 
              ? activeTextColor 
              : menuTextColor,
          }}
          onMouseEnter={(e) => {
            if (currentPath !== item.path) {
              e.currentTarget.style.backgroundColor = hoverBgColor
            }
          }}
          onMouseLeave={(e) => {
            if (currentPath !== item.path) {
              e.currentTarget.style.backgroundColor = 'transparent'
            }
          }}
        >
          <span className="text-lg mr-2">{item.icon}</span>
          <span className="text-sm font-medium">{item.label}</span>
        </Link>
      ))}
    </nav>
  )
}
