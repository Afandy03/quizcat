'use client'

import { useState, useEffect } from 'react'
import { auth, db } from '@/lib/firebase'
import { doc, updateDoc } from 'firebase/firestore'
import { useUserTheme } from '@/lib/useTheme'
import ThemedLayout from '@/components/ThemedLayout'

export default function SettingsPage() {
  const currentTheme = useUserTheme()

  const [bgColor, setBgColor] = useState<string>(currentTheme.bgColor)
  const [textColor, setTextColor] = useState<string>(currentTheme.textColor)

  useEffect(() => {
    setBgColor(currentTheme.bgColor)
    setTextColor(currentTheme.textColor)
  }, [currentTheme])

  const handleSave = async () => {
    const user = auth.currentUser
    if (!user) {
      alert('‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login')
      return
    }

    try {
      await updateDoc(doc(db, 'users', user.uid), {
        theme: { bgColor, textColor }
      })

      // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ CSS variables ‡∏î‡πâ‡∏ß‡∏¢
      document.documentElement.style.setProperty('--background', bgColor)
      document.documentElement.style.setProperty('--foreground', textColor)

      alert('‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ò‡∏µ‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ò‡∏µ‡∏°')
      location.reload()
    } catch (error: any) {
      console.error('Error updating theme:', error)
      alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ò‡∏µ‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ' + error.message)
    }
  }

  // --- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ---
  const handleReset = async () => {
    const defaultBg = '#67e049' // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏≤‡∏Å globals.css
    const defaultText = '#171717' // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏≤‡∏Å globals.css

    const user = auth.currentUser
    if (!user) {
      alert('‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login')
      return
    }

    try {
      // 1. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô Firestore ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
      await updateDoc(doc(db, 'users', user.uid), {
        theme: { bgColor: defaultBg, textColor: defaultText }
      })

      // 2. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï CSS variables ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏ú‡∏•‡∏Å‡πà‡∏≠‡∏ô reload
      document.documentElement.style.setProperty('--background', defaultBg)
      document.documentElement.style.setProperty('--foreground', defaultText)

      alert('‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ò‡∏µ‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!')
      
      // 3. Reload ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Firestore ‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      location.reload()

    } catch (error: any) {
      console.error('Error resetting theme:', error)
      alert('‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ò‡∏µ‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ' + error.message)
    }
  }
  // --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ---

  return (
    <ThemedLayout>
      <main className="p-6 max-w-lg mx-auto space-y-6">
        <h2 className="text-3xl font-bold text-center mb-4">üé® ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ò‡∏µ‡∏°</h2>

        <div className="bg-white rounded-xl shadow p-6 space-y-4">
          <div className="flex items-center justify-between">
            <label htmlFor="bgColor" className="font-medium">‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á</label>
            <input
              id="bgColor"
              type="color"
              value={bgColor}
              onChange={(e) => setBgColor(e.target.value)}
              className="h-10 w-16 border rounded"
            />
          </div>

          <div className="flex items-center justify-between">
            <label htmlFor="textColor" className="font-medium">‡∏™‡∏µ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠</label>
            <input
              id="textColor"
              type="color"
              value={textColor}
              onChange={(e) => setTextColor(e.target.value)}
              className="h-10 w-16 border rounded"
            />
          </div>

          <div className="flex items-center justify-between">
            <span className="font-medium">‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ò‡∏µ‡∏°</span>
            <div
              className="rounded px-4 py-2 shadow"
              style={{
                backgroundColor: bgColor,
                color: textColor,
              }}
            >
              ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
            </div>
          </div>

          <button
            onClick={handleSave}
            className="mt-4 bg-green-600 hover:bg-green-700 text-white text-lg px-6 py-3 rounded w-full transition"
          >
            ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ò‡∏µ‡∏°
          </button>

          <button
            onClick={handleReset}
            className="bg-gray-300 hover:bg-gray-400 text-black text-sm px-4 py-2 rounded w-full transition"
          >
            ‚ôªÔ∏è ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
          </button>
        </div>
      </main>
    </ThemedLayout>
  )
}