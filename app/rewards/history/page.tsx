"use client"

import ThemedLayout from "@/components/ThemedLayout"
import { useEffect, useState } from "react"
import { useRouter } from "next/navigation"
import { auth, db } from "@/lib/firebase"
import { useUserTheme, getBackgroundStyle } from "@/lib/useTheme"
import { AnimatePresence, motion } from "framer-motion"
import {
  collection,
  getDocs,
  query,
  where,
  Timestamp
} from "firebase/firestore"
import { onAuthStateChanged } from "firebase/auth"

export default function RewardHistoryPage() {
  const router = useRouter()
  const { theme } = useUserTheme()
  const [claims, setClaims] = useState<any[]>([])
  const [loading, setLoading] = useState(true)
  const [userExists, setUserExists] = useState(true)

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, async (user) => {
      if (!user) {
        setUserExists(false)
        setLoading(false)
        return
      }

      try {
        // ‡∏õ‡∏£‡∏±‡∏ö query ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ where ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ orderBy ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤ composite index
        const q = query(
          collection(db, "reward_claims"),
          where("userId", "==", user.uid)
        )

        const snap = await getDocs(q)
        const data = snap.docs.map((doc) => {
          const d = doc.data()
          return {
            id: doc.id,
            rewardName: d.rewardName || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠",
            cost: d.cost || 0,
            claimedAt:
              d.claimedAt instanceof Timestamp
                ? d.claimedAt.toDate()
                : new Date(),
          }
        })
        
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ù‡∏±‡πà‡∏á client ‡πÅ‡∏ó‡∏ô
        const sortedData = [...data].sort((a, b) => 
          b.claimedAt.getTime() - a.claimedAt.getTime()
        );

        setClaims(sortedData)
      } catch (err) {
        console.error("Error loading reward claims:", err)
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏Å‡∏¥‡∏î Firebase Index Error ‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏ã‡∏• (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏û‡∏±‡∏í‡∏ô‡∏≤)
        if (err instanceof Error && err.toString().includes("requires an index")) {
          console.info("Firebase index error: Data is being sorted client-side instead");
        }
      } finally {
        setLoading(false)
      }
    })

    return () => unsubscribe()
  }, [])

  return (
    <ThemedLayout>
      <div className="p-6 max-w-4xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <div className="flex items-center gap-4 mb-4">
            <button
              onClick={() => router.push("/rewards")}
              className="p-2 rounded-lg hover:bg-opacity-80 transition-colors"
              style={{ backgroundColor: theme.textColor + '10' }}
              title="‡∏Å‡∏•‡∏±‡∏ö"
            >
              <svg className="w-6 h-6" style={{ color: theme.textColor }} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
              </svg>
            </button>
            <div>
              <h1 className="text-3xl font-bold" style={{ color: theme.textColor }}>üìã ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•</h1>
              <p style={{ color: theme.textColor + '80' }}>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏•‡∏Å‡πÑ‡∏õ</p>
            </div>
          </div>
        </div>

        {/* Loading State */}
        {loading && (
          <div className="flex justify-center items-center py-12">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2" style={{ borderColor: theme.textColor }}></div>
            <p className="ml-3" style={{ color: theme.textColor + '80' }}>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥...</p>
          </div>
        )}

        {/* User Not Logged In */}
        {!loading && !userExists && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            className="rounded-2xl p-8 text-center border shadow-md"
            style={{ ...getBackgroundStyle(theme.bgColor), borderColor: theme.textColor + '20' }}
          >
            <div 
              className="w-16 h-16 mx-auto mb-4 rounded-full flex items-center justify-center"
              style={{ backgroundColor: 'rgba(239, 68, 68, 0.2)' }}
            >
              <span className="text-2xl">‚ö†Ô∏è</span>
            </div>
            <h2 className="text-xl font-bold mb-2" style={{ color: theme.textColor }}>
              ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
            </h2>
            <p style={{ color: theme.textColor + '80' }} className="mb-6">
              ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∂‡∏á‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÑ‡∏î‡πâ
            </p>
            <button 
              onClick={() => router.push("/login")}
              className="px-6 py-3 rounded-xl bg-blue-500 text-white hover:bg-blue-600 transition-colors"
            >
              ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
            </button>
          </motion.div>
        )}

        {/* No History */}
        {!loading && userExists && claims.length === 0 && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            className="rounded-2xl p-8 text-center border shadow-md"
            style={{ ...getBackgroundStyle(theme.bgColor), borderColor: theme.textColor + '20' }}
          >
            <div 
              className="w-16 h-16 mx-auto mb-4 rounded-full flex items-center justify-center"
              style={{ backgroundColor: theme.textColor + '15' }}
            >
              <span className="text-2xl">üîç</span>
            </div>
            <h2 className="text-xl font-bold mb-2" style={{ color: theme.textColor }}>
              ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏Å
            </h2>
            <p style={{ color: theme.textColor + '80' }} className="mb-6">
              ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÉ‡∏î‡πÜ ‡πÄ‡∏•‡∏¢
            </p>
            <button 
              onClick={() => router.push("/rewards")}
              className="px-6 py-3 rounded-xl text-white transition-colors"
              style={{ background: 'linear-gradient(to right, rgb(34, 197, 94), rgb(22, 163, 74))' }}
            >
              ‡πÑ‡∏õ‡πÅ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
            </button>
          </motion.div>
        )}

        {/* Claims History */}
        {!loading && userExists && claims.length > 0 && (
          <motion.div
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            className="space-y-4"
          >
            <div 
              className="rounded-2xl p-6 border mb-6"
              style={{ ...getBackgroundStyle(theme.bgColor), borderColor: theme.textColor + '20' }}
            >
              <div className="flex items-center justify-between">
                <div>
                  <h3 className="font-medium" style={{ color: theme.textColor }}>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h3>
                  <p style={{ color: theme.textColor + '60' }} className="text-sm">
                    ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {claims.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                  </p>
                </div>
                <div
                  className="px-4 py-2 rounded-xl text-sm"
                  style={{ backgroundColor: theme.textColor + '10', color: theme.textColor }}
                >
                  ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ({claims.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)
                </div>
              </div>
            </div>
            
            <AnimatePresence>
              {claims.map((claim, index) => (
                <motion.div
                  key={claim.id}
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0 }}
                  transition={{ duration: 0.3, delay: index * 0.05 }}
                  className="rounded-xl border overflow-hidden shadow-sm"
                  style={{ ...getBackgroundStyle(theme.bgColor), borderColor: theme.textColor + '20' }}
                >
                  <div className="p-4">
                    <div className="flex items-center justify-between mb-2">
                      <h3 className="font-bold text-lg" style={{ color: theme.textColor }}>
                        üéÅ {claim.rewardName}
                      </h3>
                      <span 
                        className="px-3 py-1 rounded-full text-sm font-medium"
                        style={{ backgroundColor: theme.textColor + '15', color: theme.textColor }}
                      >
                        ü™ô {claim.cost} ‡πÅ‡∏ï‡πâ‡∏°
                      </span>
                    </div>
                    
                    <div className="flex items-center" style={{ color: theme.textColor + '70' }}>
                      <span className="text-sm">
                        üìÖ ‡πÅ‡∏•‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠: {claim.claimedAt.toLocaleString("th-TH")}
                      </span>
                    </div>
                  </div>
                </motion.div>
              ))}
            </AnimatePresence>
            
            <div className="mt-6 text-center">
              <button
                onClick={() => router.push("/rewards")}
                className="hover:underline transition-colors"
                style={{ color: theme.textColor + '70' }}
              >
                ‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
              </button>
            </div>
          </motion.div>
        )}
      </div>
    </ThemedLayout>
  )
}
